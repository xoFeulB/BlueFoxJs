var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},r={};t.d(r,{h:()=>c});const n=(e,t,r=".")=>{let o=e.split(r)[0],l=e.split(r).slice(1).join(r);if(null!=t[o]){let s=n(l,t[o],r);return!0===s?{object:t,property:o,path:e,separator:r,value:t[o]}:s}return e==l},o=e=>{const t=Object.getOwnPropertyNames(e);for(const r of t){const t=e[r];t&&"object"==typeof t&&o(t)}return Object.freeze(e)},l=async(e={_scope_:null})=>{let t=[];return Object.keys(e).filter((e=>!["_scope_"].includes(e))).forEach((r=>{[...e._scope_.querySelectorAll(r)].filter((e=>e)).forEach((e=>{t.push({element:e,selector:new String(r)})}))})),await Promise.all(t.map((t=>new Promise((async(r,n)=>{try{await e[t.selector]({element:t.element,selector:t.selector,self:e}),r(t.selector)}catch(e){console.info("walkHorizontally |",e)}}))))),e},s=async(e={_scope_:null})=>{for(let t of Object.keys(e).filter((e=>!["_scope_"].includes(e)))){let r=[...e._scope_.querySelectorAll(t)].filter((e=>e));for(let n of r)try{await e[t]({element:n,selector:new String(t),self:e})}catch(e){console.info("walkVertically |",e)}}return e},c=o({Util:{getProperty:n},Walker:{walkHorizontally:l,walkVertically:s},Sync:{view:async(t=document)=>{await l({_scope_:t,"[capture]":async e=>{let t=document.querySelector(e.element.attributes.capture.value).tagName.toLowerCase();e.element.setAttribute("sync",""),e.element.setAttribute("sync-to-this",""),"input"==t?(e.element.setAttribute("sync-to-property","textContent"),e.element.setAttribute("sync-from",e.element.attributes.capture.value),e.element.setAttribute("sync-from-property","value"),e.element.setAttribute("sync-event",JSON.stringify(["sync","change","input"]))):"select"==t&&(e.element.setAttribute("sync-to-property","textContent"),e.element.setAttribute("sync-from",e.element.attributes.capture.value),e.element.setAttribute("sync-from-property","selectedOptions.0.textContent"),e.element.setAttribute("sync-event",JSON.stringify(["sync","change"]))),e.element.removeAttribute("capture")}}),await s({_scope_:t,"[sync]":async t=>{let r=()=>{o()},o=()=>{t.element.SyncView={from:t.element.attributes["sync-from-this"]?e:document.querySelector(t.element.attributes["sync-from"].value),fromProperty:t.element.attributes["sync-from-property"].value,to:t.element.attributes["sync-to-this"]?t.element:document.querySelector(t.element.attributes["sync-to"].value),toProperty:t.element.attributes["sync-to-property"].value,events:JSON.parse(t.element.attributes["sync-event"]?t.element.attributes["sync-event"].value:'["sync"]'),entryNop:t.element.attributes["sync-entry-nop"],init:r},t.element.SyncView.sync=()=>{let e=n(t.element.SyncView.fromProperty,t.element.SyncView.from),r=n(t.element.SyncView.toProperty,t.element.SyncView.to);try{r.object[r.property]=e.object[e.property]}catch{}},!t.element.SyncView.entryNop&&t.element.SyncView.sync(),t.element.SyncView.events.forEach((e=>{t.element.SyncView.from.addEventListener(e,(e=>{t.element.SyncView.sync(),t.element.SyncView.to.dispatchEvent(new Event("sync"))}))}))};r()},sync:async e=>{e.element.SyncView={Syncs:[]};let t=JSON.parse(e.element.textContent),r=e=>{o(e)},o=t=>{let o=t.separator?t.separator:".",l=t.from.split(o),s=t.to.split(o),c=t.events,a=e.self._scope_.querySelector(l[0]),y=e.self._scope_.querySelector(s[0]),i={separator:o,from:a,fromProperty:l.slice(1).join(o),to:y,toProperty:s.slice(1).join(o),events:c,init:r,sync:()=>{let e=n(i.fromProperty,i.from,i.separator),t=n(i.toProperty,i.to,i.separator);try{t.object[t.property]=e.object[e.property]}catch{}}};i.events.forEach((e=>{i.from.addEventListener(e,(e=>{i.sync(),i.to.dispatchEvent(new Event("sync"))}))})),i.sync(),e.element.SyncView.Syncs.push(i)};Array.prototype==t.__proto__&&t.forEach((e=>{r(e)})),Object.prototype==t.__proto__&&r(t)}})},value:async(e={},t=document)=>{let r={values:{},flesh:()=>{Object.keys(r.values).forEach((e=>{r.values[`${e}`].setTextContent(r.values[e].value),r.values[`${e}`].setValue(r.values[e].value)}))}};return Object.keys(e).forEach((n=>{r.values[`${n}`]={value:e[n],origin:e[n],setTextContent:e=>{r.values[n].value=e,[...t.querySelectorAll(`[setTextContent="${n}"]`)].forEach((t=>{t.textContent=e}))},setValue:e=>{r.values[n].value=e,[...t.querySelectorAll(`[setValue="${n}"]`)].forEach((t=>{t.value=e}))}},r.values[`${n}`].setTextContent(e[n]),r.values[`${n}`].setValue(e[n])})),r}}});var a=r.h;export{a as BlueFoxJs};